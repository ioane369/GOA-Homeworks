#                                         DEBUGGING (ხარვეზების აღმოფხვრა)
 
# კოდი მუშაობს სინქრონიზებულად, ანუ ის კოდს უშვებს თანმიმდევრულად (ზემო სტრიქონებიდან ქვემო სტრიქონებისკენ).
"""  
კოდი მუშაობას წyვეტს პირველივე ბაგის აღმოჩენისას
 
ქვემოთ მოცემული გვაქვს 2 ბაგი (my age ; Budget), 
მაგრამ კოდი მუშაობას წყვეტს პირველის (my age ; უნდა იყოს my_age) აღმოჩენისთანავე

my_age = 16      
budget = 1200                       

print(my age)
print(Budget)    """


#                                       UNIVERSAL STANDARTS IN PROGRAMMING
""" 
კოდირების პროცესში ჩვენი მოქმედებების განსამარტად და აღსაწერად გამოიყენება კომენტარი.

კომენტარის დასაწერად გამოიყენება #. 

კომენტარები ეხმარება სხვებს (და სამომავლოდ შენც) კოდის გაგებაში.

კომენტარებს კომპიუტერი აიგნორებს.

თუ ჩვენ კოდირებისას რაღაც შეგვეშალა და გარკვეული მიზეზების გამო არ გვცალია მათ გასასწორებლად, 
შეგვიძლია # - ის გამოყენებით ის დროებით კომენტარად ვაქციოთ, ასე კომპიუტერი დააიგნორებს მას.

პითონი შემთხვევისადმი მგრძნობიარე ენაა (case-sensitive), რაც იმას ნიშნავს, რომ a და A განსხვავებულად აღიქმება.
  მაგ: 
budget = 100           
Budget = 120                
BUDGET = 130
სამივე მათგანი აღიქმება სრულიად განსხვავებულ ცვლადად.

თუ ცვლადი შედგება ერთზე მეტი სიტყვისგან, მათ შორის ვიყენებთ ქვედა ტირეს ( _ ), ამას snake case ეწოდება.
  მაგ: my_name

ცვლადის სახელი შეიძლება შიცავდეს ციფრებს, მაგრამ არ შიძლება იწყებოდეს ციფრით.
  მაგ: 1st_human (ამოაგდებს ერორს)   """


#                                       INPUTS AND OUTPUTS
""" 
კომპიუტერული პროგრამები შექმნილია მომხმარებლებთან და გარე სამყაროსთან ურთიერთობისთვის.

input (შეტანა) არის ნებისმიერი სახის ინფორმაცია, რომელიც შედის კომპიუტერში.
 მაგ: რომელიმე ღილაკზე დაწკაპუნება.

input ფუნქციას ტერმინალში გამოაქვს ტექსტი, რომელსაც მას გადავცემთ (ამ შემთხვევააში what is your age: )
  მაგ:   """
input("enter your age: ")
""" 
input ფუნქციას შედეგად ყოველთვის შეაქვს string ტიპის მონაცემი.
მაგ:   """
name = input("enter your name: ")
print("your name is", name)
"""
input() ინსტრუქცია საშუალებას აძლევს მომხმარებელს შეიყვანოს მისი მონაცემები ცვლადის მნიშვნელობის სახით თქვენს პროგრამაში.

input - ის მეშვეობით შეგიძლია მომხმარებელს ჰკითხო მნიშვნელობის შესახებ, რომელიც გარკვეულ ცვლადში თავსდება.
  მაგ: შეგიძლია ჰკითხო სახელი შემდეგნაირად:
  name = input()


output (გამოტანა) არის კომპიუტერის გარე სამყაროსთან კომუნიკაციის საშუალება.
  მაგ: ეკრანზე ნაჩვენები შეტყობინება და ხმა დინამიკიდან.

print() ინსტრუქცია გამოიყენება output - ის გენერირებისთვის   """


#                                             DATA TYPES
""" 
არსებობს სხვადასხვა ტიპის მონაცემები. კომპიუტერი სხვადასხვა ტიპის მონაცემებს განსხვავებულად ინახავს და ამუშავებს.

string არის ნებისმიერი ტექსტი, რომელიც მოქცეულია ბრჭყალებში.
  მაგ: "balls"; "fire"; "house" და ა.შ

string-ად აღიქმება ნებისმიერი მთელი რიცხვი ან ათწილადი, თუ ის მოქცეულია ბრჭყალებში.
  მაგ: "0"; "-5"; "3"; "23,12"; "-313,23" და ა.შ  

integer არის ნებისმიერი მთელი რიცხვი - დადებითი, უარყოფითი ან ნულოვანი.
  მაგ: 3; -3; 0 და ა.შ

float არის ნებისმიერი ათწილადი - დადებითი ან უარყოფითი.
  მაგ: 45,1; 26,6; -128,3 და ა.შ 

string-სა და სხვა ტიპის მონაცემს შორის მათემატიკური მოქმედებები ვერ განხორციელდება
  მაგ:
print("13" + 13)   (TypeError)

როდესაც ვიყენებთ დამატების ოპერატორს ( + ) string-ებთან, ისინი ერიანდებიან. ამას ეწოდება concatenation (შეერთება)
  მაგ:                                                                                                              """
a = "foot"                                          
b = "ball"                                           
print("foot" + "ball")  

number1 = "369"
number2 = "963"
print(number1 + number2)